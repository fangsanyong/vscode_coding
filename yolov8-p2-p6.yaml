# # YOLOv8 object detection model with P2-P6 outputs

# # Parameters
# nc: 80 # number of classes
# scales:
#   n: [0.33, 0.25, 1024]
#   s: [0.33, 0.50, 1024]
#   m: [0.67, 0.75, 768]
#   l: [1.00, 1.00, 512]
#   x: [1.00, 1.25, 512]

# # Backbone
# backbone:
#   - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
#   - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
#   - [-1, 1, Conv, [64, 3, 1]] # 新增：处理P2/4特征图
#   - [-1, 3, C2f, [128, True]]
#   - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
#   - [-1, 6, C2f, [256, True]]
#   - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
#   - [-1, 6, C2f, [512, True]]
#   - [-1, 1, Conv, [768, 3, 2]] # 7-P5/32
#   - [-1, 3, C2f, [768, True]]
#   - [-1, 1, Conv, [1024, 3, 2]] # 9-P6/64
#   - [-1, 3, C2f, [1024, True]]
#   - [-1, 1, SPPF, [1024, 5]] # 11

# # Head
# head:
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 8], 1, Concat, [1]] # cat backbone P5
#   - [-1, 3, C2, [768, False]] # 14

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 6], 1, Concat, [1]] # cat backbone P4
#   - [-1, 3, C2, [512, False]] # 17

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 4], 1, Concat, [1]] # cat backbone P3
#   - [-1, 3, C2, [256, False]] # 20 (P3/8-small)

#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 17], 1, Concat, [1]] # cat head P4
#   - [-1, 3, C2, [512, False]] # 23 (P4/16-medium)

#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 14], 1, Concat, [1]] # cat head P5
#   - [-1, 3, C2, [768, False]] # 26 (P5/32-large)

#   - [-1, 1, Conv, [768, 3, 2]]
#   - [[-1, 11], 1, Concat, [1]] # cat head P6
#   - [-1, 3, C2, [1024, False]] # 29 (P6/64-xlarge)

#   # P2
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 2], 1, Concat, [1]]
#   - [-1, 3, C2, [128, False]] # 新增P2

#   # Detect
#   - [[17, 20, 23, 26, 29], 1, Detect, [nc]] # Detect(P2, P3, P4, P5, P6)


# YOLOv8 Configuration with P2-P6 Outputs

# # Parameters
# nc: 80  # number of classes
# scales:
#   n: [0.33, 0.25, 1024]  # nano
#   s: [0.33, 0.50, 1024]  # small
#   m: [0.67, 0.75, 768]   # medium
#   l: [1.00, 1.00, 512]   # large
#   x: [1.00, 1.25, 512]   # extra large

# # Backbone
# backbone:
#   # Layer 0: Input -> P1/2
#   - [-1, 1, Conv, [64, 3, 2]]          # 0-P1/2                         

#   # Layer 1: P2/4
#   - [-1, 1, Conv, [128, 3, 2]]         # 1-P2/4
#   - [-1, 1, Conv, [64, 3, 1]]          # Add more capacity to P2
#   - [-1, 3, C2f, [128, True]]

#   # Layer 3: P3/8
#   - [-1, 1, Conv, [256, 3, 2]]         # 3-P3/8
#   - [-1, 6, C2f, [256, True]]

#   # Layer 5: P4/16
#   - [-1, 1, Conv, [512, 3, 2]]         # 5-P4/16
#   - [-1, 6, C2f, [512, True]]

#   # Layer 7: P5/32
#   - [-1, 1, Conv, [768, 3, 2]]         # 7-P5/32
#   - [-1, 3, C2f, [768, True]]

#   # Layer 9: P6/64
#   - [-1, 1, Conv, [1024, 3, 2]]        # 9-P6/64
#   - [-1, 3, C2f, [1024, True]]
#   - [-1, 1, SPPF, [1024, 5]]           # 11

# # Head
# head:
#   # P6
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 9], 1, Concat, [1]]          # P5 (cat backbone P5)
#   - [-1, 3, C2, [768, False]]          # 14

#   # P5
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 7], 1, Concat, [1]]          # P4 (cat backbone P4)
#   - [-1, 3, C2, [512, False]]          # 17

#   # P4
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 5], 1, Concat, [1]]          # P3 (cat backbone P3)
#   - [-1, 3, C2, [256, False]]          # 20 (P3/8-small)

#   # P3
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 3], 1, Concat, [1]]          # P2 (cat backbone P2)
#   - [-1, 3, C2, [128, False]]          # 23 (P2/4-small)

#   # P2
#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 17], 1, Concat, [1]]
#   - [-1, 3, C2, [512, False]]          # 26 (P4/16-medium)

#   # P3 -> Downsample
#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 14], 1, Concat, [1]]
#   - [-1, 3, C2, [768, False]]          # 29 (P5/32-large)

#   # Detect (P2, P3, P4, P5, P6)
#   - [[23, 20, 17, 14, 11], 1, Detect, [nc]]



# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8 object detection model with P3-P6 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-p6.yaml' will call yolov8-p6.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n-p6 summary (fused): 220 layers, 4976656 parameters, 42560 gradients, 8.7 GFLOPs
  s: [0.33, 0.50, 1024] # YOLOv8s-p6 summary (fused): 220 layers, 17897168 parameters, 57920 gradients, 28.5 GFLOPs
  m: [0.67, 0.75, 768] # YOLOv8m-p6 summary (fused): 285 layers, 44862352 parameters, 78400 gradients, 83.1 GFLOPs
  l: [1.00, 1.00, 512] # YOLOv8l-p6 summary (fused): 350 layers, 62351440 parameters, 98880 gradients, 167.3 GFLOPs
  x: [1.00, 1.25, 512] # YOLOv8x-p6 summary (fused): 350 layers, 97382352 parameters, 123456 gradients, 261.1 GFLOPs

# YOLOv8.0x6 backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2                           #320*320---0
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4                          #160*160---1
  - [-1, 3, C2f, [128, True]]                                    #160*160---2
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8                          #80*80---3
  - [-1, 6, C2f, [256, True]]                                    #80*80---4
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16                         #40*40---5
  - [-1, 6, C2f, [512, True]]                                    #40*40---6
  - [-1, 1, Conv, [768, 3, 2]] # 7-P5/32                         #20*20---7
  - [-1, 3, C2f, [768, True]]                                    #20*20---8
  - [-1, 1, Conv, [1024, 3, 2]] # 9-P6/64                        #10*10---9
  - [-1, 3, C2f, [1024, True]]                                   #10*10---10
  - [-1, 1, SPPF, [1024, 5]] # 11                                #10*10---11

# YOLOv8.0x6 head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                   #20*20---12
  - [[-1, 8], 1, Concat, [1]] # cat backbone P5                  #20*20---13
  - [-1, 3, C2, [768, False]] # 14                               #20*20---14  p5

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                   #40*40---15
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4                  #40*40---16
  - [-1, 3, C2, [512, False]] # 17                               #40*40---17  p4

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                   #80*80---18
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3                  #80*80---19
  - [-1, 3, C2, [256, False]] # 20 (P3/8-small)                  #80*80---20   p3
  
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                   #160*160---21
  - [[-1, 2], 1, Concat, [1]] # cat backbone P3                  #160*160---22
  - [-1, 3, C2, [128, False]] # 20 (P3/8-small)                  #160*160---23   p2
  
  - [-1, 1, Conv, [128, 3, 2]]                                   #80*80---24
  - [[-1, 20], 1, Concat, [1]] # cat head P4                     #80*80---25
  - [-1, 3, C2, [256, False]] # 23 (P4/16-medium)                #80*80---26    p3
  

  - [-1, 1, Conv, [256, 3, 2]]                                   #40*40---27
  - [[-1, 17], 1, Concat, [1]] # cat head P4                     #40*40---28
  - [-1, 3, C2, [512, False]] # 23 (P4/16-medium)                #40*40---29    p4

  - [-1, 1, Conv, [512, 3, 2]]                                   #20*20---30
  - [[-1, 14], 1, Concat, [1]] # cat head P5                     #20*20---31
  - [-1, 3, C2, [768, False]] # 26 (P5/32-large)                 #20*20---32    p5

  - [-1, 1, Conv, [768, 3, 2]]                                   #10*10---33
  - [[-1, 11], 1, Concat, [1]] # cat head P6                     #10*10---34
  - [-1, 3, C2, [1024, False]] # 29 (P6/64-xlarge)               #10*10---35     p6

  - [[23, 26, 29,32,35], 1, Detect, [nc]] # Detect(P2,P3, P4, P5, P6)                                   #320*320
